managed implementation in class zbp_i_travel_m unique;
strict ( 2 );

define behavior for Z_I_TRAVEL_M alias Travel
persistent table /dmo/travel_m
lock master
authorization master ( none  )
//etag master <field_name>
{
  create;
  update;
  delete;
  field ( readonly:update ) TravelID;
  association _booking { create; }

  mapping for /dmo/travel_m{
    TravelID = travel_id;
    AgencyID = agency_id;
    CustomerID = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy     = created_by;
    LastChangedBy = last_changed_by;
    CreatedAt     = created_at;
    LastChangedAt = last_changed_at;
  }
}

define behavior for Z_I_BOOKING_M alias Booking
persistent table /dmo/booking_m
lock dependent by _travel
authorization dependent by _travel
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) TravelID;
  association _travel;
  association _booksuppl { create; }
  mapping for /dmo/booking_m{
    TravelID = travel_id;
    BookingID = booking_id;
    BookingDate = booking_date;
    CustomerID = customer_id;
    CarrierID = carrier_id;
    ConnectionID = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;

  }

}

define behavior for Z_I_BOOKSUPPL_M alias Bookingsuppl
persistent table /dmo/booksuppl_m
lock dependent by _travel
authorization dependent by _travel
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) TravelID, BookingID;
  association _travel;
  association _booking;

  mapping for /dmo/booksuppl_m {
    TravelID = travel_id;
    BookingID = booking_id;
    BookingSupplementID = booking_supplement_id;
    SupplementID = supplement_id;
    Price = price;
    CurrencyCode = currency_code;
    LastChangedAt = last_changed_at;
  }
}